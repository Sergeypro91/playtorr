{
  "name": "playtorr-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "MIT",
  "scripts": {
    "initial-installation": "npm install --legacy-peer-deps",
    "remove-node_modules": "find . -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \\;",
    "remove-package-lock": "rm package-lock.json",
    "prebuild": "rimraf dist",
    "build-communication-api": "nest build communication-api",
    "build-main-api": "nest build main-api",
    "build-movie-processing-api": "nest build movie-processing-api",
    "build": "npm run build-communication-api && npm run build-main-api && npm run build-movie-processing-api",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start-communication-api": "nest start communication-api",
    "start-main-api": "nest start main-api",
    "start-movie-processing-api": "nest start movie-processing-api",
    "start": "npm run start-communication-api & npm run start-main-api & npm run start-movie-processing-api",
    "start-communication-api:dev": "nest start communication-api --watch",
    "start-main-api:dev": "nest start main-api --watch",
    "start-movie-processing-api:dev": "nest start movie-processing-api --watch",
    "start:dev": "npm run start-communication-api:dev & npm run start-main-api:dev & npm run start-movie-processing-api:dev",
    "start-communication-api:debug": "nest start communication-api --debug --watch",
    "start-main-api:debug": "nest start main-api --debug --watch",
    "start-movie-processing-api:debug": "nest start movie-processing-api --debug --watch",
    "start:debug": "npm run start-communication-api:debug & npm run start-main-api:debug & npm run start-movie-processing-api:debug",
    "start-communication-api:prod": "node dist/communication-api/main",
    "start-main-api:prod": "node dist/main-api/main",
    "start-movie-processing-api:prod": "node dist/movie-processing-api/main",
    "start:prod": "npm run start-communication-api:prod & npm run start-main-api:prod & npm run start-movie-processing-api:prod",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/main-api/test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^9.1.2",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.1.2",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/microservices": "^9.1.2",
    "@nestjs/mongoose": "^9.2.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.1.2",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "connect-redis": "^6.1.3",
    "date-fns": "^2.29.3",
    "express-session": "^1.17.3",
    "ioredis": "^5.2.3",
    "minio": "^7.0.32",
    "mongoose": "^6.6.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.5.6",
    "telegraf": "^4.9.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.1.3",
    "@nestjs/schematics": "^9.0.3",
    "@nestjs/testing": "^9.1.2",
    "@types/express": "^4.17.14",
    "@types/jest": "29.0.3",
    "@types/node": "^18.7.19",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.38.0",
    "@typescript-eslint/parser": "^5.38.0",
    "eslint": "^8.22.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "29.0.3",
    "prettier": "^2.7.1",
    "source-map-support": "^0.5.21",
    "supertest": "^6.2.4",
    "ts-jest": "29.0.2",
    "ts-loader": "^9.4.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "4.1.0",
    "typescript": "^4.8.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/contracts(|/.*)$": "<rootDir>/libs/contracts/src/$1",
      "^@app/interfaces(|/.*)$": "<rootDir>/libs/interfaces/src/$1",
      "^@app/configs(|/.*)$": "<rootDir>/libs/configs/src/$1",
      "^@app/dto(|/.*)$": "<rootDir>/libs/dto/src/$1"
    }
  }
}
