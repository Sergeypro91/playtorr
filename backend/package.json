{
	"name": "playtorr-backend",
	"version": "0.0.1",
	"description": "",
	"author": "",
	"private": true,
	"license": "MIT",
	"scripts": {
		"initial-installation": "npm install --legacy-peer-deps",
		"remove-node_modules": "find . -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \\;",
		"remove-package-lock": "rm package-lock.json",
		"prebuild": "rimraf dist",
		"build:api": "nest build api",
		"build:auth": "nest build auth",
		"build:tmdb": "nest build tmdb",
		"build:user": "nest build user",
		"build:minio": "nest build minio",
		"build:parser": "nest build parser",
		"build:person": "nest build person",
		"build:picture": "nest build picture",
		"build:telegram": "nest build telegram",
		"build": "npm run build:api && npm run build:auth && npm run build:tmdb && npm run build:user && npm run build:telegram && npm run build:minio && npm run build:parser && npm run build:person && npm run build:picture",
		"format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
		"start:api": "nest start api",
		"start:auth": "nest start auth",
		"start:tmdb": "nest start tmdb",
		"start:user": "nest start user",
		"start:minio": "nest start minio",
		"start:parser": "nest start parser",
		"start:person": "nest start person",
		"start:picture": "nest start picture",
		"start:telegram": "nest start telegram",
		"start": "npm run start:api & npm run start:auth & npm run start:tmdb & npm run start:user & npm run start:telegram & npm run start:minio & npm run start:parser & npm run start:person & npm run start:picture",
		"start-dev:api": "nest start api --watch",
		"start-dev:auth": "nest start auth --watch",
		"start-dev:tmdb": "nest start tmdb --watch",
		"start-dev:user": "nest start user --watch",
		"start-dev:minio": "nest start minio --watch",
		"start-dev:parser": "nest start parser --watch",
		"start-dev:person": "nest start person --watch",
		"start-dev:picture": "nest start picture --watch",
		"start-dev:telegram": "nest start telegram --watch",
		"start:dev": "npm run start-dev:api & npm run start-dev:auth & npm run start-dev:tmdb & npm run start-dev:user & npm run start-dev:telegram & npm run start-dev:minio & npm run start-dev:parser & npm run start-dev:person & npm run start-dev:picture",
		"start-debug:api": "nest start api --debug --watch",
		"start-debug:auth": "nest start auth --debug --watch",
		"start-debug:tmdb": "nest start tmdb --debug --watch",
		"start-debug:user": "nest start user --debug --watch",
		"start-debug:minio": "nest start minio --debug --watch",
		"start-debug:parser": "nest start parser --debug --watch",
		"start-debug:person": "nest start person --debug --watch",
		"start-debug:picture": "nest start picture --debug --watch",
		"start-debug:telegram": "nest start telegram --debug --watch",
		"start:debug": "npm run start-debug:api & npm run start-debug:auth & npm run start-debug:tmdb & npm run start-debug:user & npm run start-debug:telegram & npm run start-debug:minio & npm run start-debug:parser & npm run start-debug:person & npm run start-debug:picture",
		"start-prod:api": "node dist/api/main",
		"start-prod:auth": "node dist/auth/main",
		"start-prod:tmdb": "node dist/tmdb/main",
		"start-prod:user": "node dist/user/main",
		"start-prod:minio": "node dist/minio/main",
		"start-prod:parser": "node dist/parser/main",
		"start-prod:person": "node dist/person/main",
		"start-prod:picture": "node dist/picture/main",
		"start-prod:telegram": "node dist/telegram/main",
		"start:prod": "npm run start-prod:api & npm run start-prod:auth & npm run start-prod:tmdb & npm run start-prod:user & npm run start-prod:telegram & npm run start-prod:minio & npm run start-prod:parser & npm run start-prod:person & npm run start-prod:picture",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"check-types": "tsc --noEmit",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "jest --config apps/auth/test/jest-e2e.json"
	},
	"dependencies": {
		"@nestjs/common": "^9.1.2",
		"@nestjs/config": "^2.2.0",
		"@nestjs/core": "^9.1.2",
		"@nestjs/jwt": "^10.0.1",
		"@nestjs/mapped-types": "^1.2.0",
		"@nestjs/microservices": "^9.1.2",
		"@nestjs/mongoose": "^9.2.0",
		"@nestjs/passport": "^9.0.0",
		"@nestjs/platform-express": "^9.1.2",
		"@nestjs/swagger": "^6.1.2",
		"bcryptjs": "^2.4.3",
		"class-transformer": "^0.5.1",
		"class-validator": "^0.14.0",
		"connect-redis": "^7.0.1",
		"date-fns": "^2.29.3",
		"express-session": "^1.17.3",
		"fs-extra": "^11.1.1",
		"minio": "^7.0.33",
		"mongoose": "^7.0.3",
		"nestjs-rmq": "^2.8.0",
		"passport": "^0.6.0",
		"passport-jwt": "^4.0.0",
		"passport-local": "^1.0.0",
		"pino": "^8.6.1",
		"pino-http": "^8.2.1",
		"puppeteer": "^19.2.1",
		"puppeteer-extra": "^3.3.4",
		"puppeteer-extra-plugin-stealth": "^2.11.1",
		"redis": "^4.6.5",
		"reflect-metadata": "^0.1.13",
		"rimraf": "^5.0.0",
		"rxjs": "^7.5.6",
		"swagger-ui-express": "^4.5.0",
		"telegraf": "^4.9.2",
		"uuid": "^9.0.0"
	},
	"devDependencies": {
		"@nestjs/cli": "^9.1.3",
		"@nestjs/schematics": "^9.0.3",
		"@nestjs/testing": "^9.1.2",
		"@types/express": "^4.17.14",
		"@types/fs-extra": "^11.0.1",
		"@types/jest": "^29.5.0",
		"@types/minio": "^7.0.14",
		"@types/multer": "^1.4.7",
		"@types/node": "^18.7.19",
		"@types/pino": "^7.0.5",
		"@types/supertest": "^2.0.12",
		"@types/uuid": "^9.0.1",
		"@typescript-eslint/eslint-plugin": "^5.38.0",
		"@typescript-eslint/parser": "^5.38.0",
		"eslint": "^8.22.0",
		"eslint-config-prettier": "^8.5.0",
		"eslint-plugin-prettier": "^4.2.1",
		"jest": "^29.5.0",
		"lint-staged": "^13.2.1",
		"prettier": "^2.7.1",
		"source-map-support": "^0.5.21",
		"supertest": "^6.2.4",
		"ts-jest": "^29.1.0",
		"ts-loader": "^9.4.1",
		"ts-node": "^10.9.1",
		"tsconfig-paths": "^4.2.0",
		"typescript": "^5.0.4"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": ".",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "./coverage",
		"testEnvironment": "node",
		"roots": [
			"<rootDir>/apps/",
			"<rootDir>/libs/"
		],
		"moduleNameMapper": {
			"^@app/common(|/.*)$": "<rootDir>/libs/common/src/$1"
		}
	},
	"lint-staged": {
		"*.{js,ts}": [
			"eslint --fix",
			"tsc-files --noEmit"
		]
	}
}
